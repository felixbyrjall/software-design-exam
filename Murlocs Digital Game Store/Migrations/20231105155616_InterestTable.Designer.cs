// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalGameStore.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231105155616_InterestTable")]
    partial class InterestTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("DB.Publisher", b =>
                {
                    b.Property<int>("Publisher_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Publisher_ID");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("DigitalGameStore.DB.Game", b =>
                {
                    b.Property<int>("Game_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PublisherID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReleaseDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Game_Id");

                    b.HasIndex("PublisherID");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("DigitalGameStore.DB.GameGenres", b =>
                {
                    b.Property<int>("GameGenres_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Game_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GamesGame_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Genre_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GenresGenre_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("GameGenres_ID");

                    b.HasIndex("GamesGame_Id");

                    b.HasIndex("GenresGenre_ID");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("DigitalGameStore.DB.Genre", b =>
                {
                    b.Property<int>("Genre_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Genre_ID");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("DigitalGameStore.DB.InterestTable", b =>
                {
                    b.Property<int>("Interest_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Interest_ID");

                    b.HasIndex("GameID");

                    b.ToTable("InterestTable");
                });

            modelBuilder.Entity("DigitalGameStore.DB.Game", b =>
                {
                    b.HasOne("DB.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DigitalGameStore.DB.GameGenres", b =>
                {
                    b.HasOne("DigitalGameStore.DB.Game", "Games")
                        .WithMany()
                        .HasForeignKey("GamesGame_Id");

                    b.HasOne("DigitalGameStore.DB.Genre", "Genres")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenresGenre_ID");

                    b.Navigation("Games");

                    b.Navigation("Genres");
                });

            modelBuilder.Entity("DigitalGameStore.DB.InterestTable", b =>
                {
                    b.HasOne("DigitalGameStore.DB.Game", "Game")
                        .WithMany("InterestTables")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("DB.Publisher", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("DigitalGameStore.DB.Game", b =>
                {
                    b.Navigation("InterestTables");
                });

            modelBuilder.Entity("DigitalGameStore.DB.Genre", b =>
                {
                    b.Navigation("GameGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
